# Taskfile to ease the use of dev tooling...
# note that task should be run in the virtual environment you set up with poetry.
#
#  >  poetry shell           # this is analagous to `conda activate` or activating a venv.
#  poetry>  task reformat    # runs the 'reformat' task, defined below to use ruff
#  poetry>  task fixme       # this will run both the reformat and lint tasks

version: '3'

env:
  SRCS: ./src ./tests

tasks:
  fixme:
    summary: |
      Runs static code analysis tools, including reformat.
    cmds:
      - task: reformat
      - task: lint
      - task: typecheck

  reformat:
    cmds:
      - ruff format $SRCS

  lint:
    cmds:
      - ruff check $SRCS

  typecheck:
    cmds:
      - mypy --install-types --non-interactive $SRCS

  tests:
    summary: |
      Runs all tests configured in pytest.
    cmds:
      - pytest --cov --sparse-ordering ./tests

  tests.unittest:
    summary: |
      Run only tests marked as 'unittest'
    cmds:
      - pytest  -m 'unittest' --cov --sparse-ordering ./tests

  tests.integration:
    summary: |
      Run only tests marked as 'integration'
    cmds:
      - pytest  -m 'integration' --cov --sparse-ordering ./tests



#   build:
#     summary: |
#       Builds the docs and a wheel for ease of installation.
#     cmds:
#       - task: doc
#       - task: wheel
# #       - task: docker

  doc:
    cmds:
      - sphinx-build -a -b html ./docs ./public

#   wheel:
#     cmds:
#       - poetry build
